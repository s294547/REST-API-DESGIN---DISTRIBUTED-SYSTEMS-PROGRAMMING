{
	"info": {
		"_postman_id": "1b4d98b1-a978-46b2-8df2-04cb82797628",
		"name": "EXAM DSP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25380314"
	},
	"item": [
		{
			"name": "Drafts",
			"item": [
				{
					"name": "getCooperativeReviewDrafts",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.totalPages).to.eql(2);\r",
													"    pm.expect(jsonData.currentPage).to.eql(1);\r",
													"    pm.expect(jsonData.totalItems).to.eql(3);\r",
													"    pm.expect(jsonData.drafts[0].filmId).to.eql(9);\r",
													"    pm.expect(jsonData.drafts[0].reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.drafts[0].authorId).to.eql(1);\r",
													"    pm.expect(jsonData.drafts[0].draftId).to.eql(1);\r",
													"    pm.expect(jsonData.drafts[0].rating).to.eql(10);\r",
													"    pm.expect(jsonData.drafts[0].review).to.eql(\"\\\"ciao\\\"\");\r",
													"    pm.expect(jsonData.drafts[0].closed).to.eql(true);\r",
													"    pm.expect(jsonData.drafts[0].self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-/drafts/1\");\r",
													"    pm.expect(jsonData.drafts[1].filmId).to.eql(9);\r",
													"    pm.expect(jsonData.drafts[1].reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.drafts[1].authorId).to.eql(1);\r",
													"    pm.expect(jsonData.drafts[1].draftId).to.eql(2);\r",
													"    pm.expect(jsonData.drafts[1].rating).to.eql(9);\r",
													"    pm.expect(jsonData.drafts[1].review).to.eql(\"\\\"bello\\\"\");\r",
													"    pm.expect(jsonData.drafts[1].closed).to.eql(true);\r",
													"    pm.expect(jsonData.drafts[1].self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-/drafts/2\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/90/reviews/cooperative/1,2/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"90",
												"reviews",
												"cooperative",
												"1,2",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,5/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,5",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There is no draft",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData[0].filmId).to.eql(9);\r",
													"    pm.expect(jsonData[0].reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData[0].completed).to.eql(false);\r",
													"    pm.expect(jsonData[0].self).to.eql(\"/api/films/public/9/reviews/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There is no draft\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getCooperativeReviewDraft",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.rating).to.eql(10);\r",
													"    pm.expect(jsonData.review).to.eql(\"\\\"ciao\\\"\");\r",
													"    pm.expect(jsonData.closed).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-/drafts/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of draftId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of draftId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/a",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"a"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/90/reviews/cooperative/1,2/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"90",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,5/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,5",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There is no draft",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData[0].filmId).to.eql(9);\r",
													"    pm.expect(jsonData[0].reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData[0].completed).to.eql(false);\r",
													"    pm.expect(jsonData[0].self).to.eql(\"/api/films/public/9/reviews/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "addCooperativeReviewDraft",
					"item": [
						{
							"name": "Wrong format of filmId path parameter Copy",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The author of the draft is not a reviewer",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The author of the draft is not a reviewer\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/cooperative/1,2/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"cooperative",
												"1,2",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There is already an open draft for that review",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There is already an open draft for that review\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review has already been completed",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review has already been completed\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,6/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,6",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Json Validation Schema Error",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"JsonSchemaValidationError\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,6/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,6",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"JsonSchemaValidationError\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"ciao\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,6/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,6",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success",
							"item": [
								{
									"name": "The review does not exist",
									"item": [
										{
											"name": "LOGIN",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/users/authenticator?type=login",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"users",
														"authenticator"
													],
													"query": [
														{
															"key": "type",
															"value": "login"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"\r",
															"pm.test(\"Response body is what expected\", function(){\r",
															"    const jsonData= pm.response.json();\r",
															"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
															"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,3/drafts",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"films",
														"public",
														"9",
														"reviews",
														"cooperative",
														"1,3",
														"drafts"
													]
												}
											},
											"response": []
										},
										{
											"name": "LOGOUT",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\":1\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/users/authenticator?type=logout",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"users",
														"authenticator"
													],
													"query": [
														{
															"key": "type",
															"value": "logout"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Review",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.draft.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.draft.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.draft.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.rating).to.eql(4);\r",
													"    pm.expect(jsonData.draft.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.draft.closed).to.eql(false);\r",
													"    pm.expect(jsonData.draft.self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check draft creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.rating).to.eql(4);\r",
													"    pm.expect(jsonData.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.closed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Agreement Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Review and draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not authenticated",
							"item": [
								{
									"name": "Create Draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "deleteCooperativeReviewDraft",
					"item": [
						{
							"name": "Wrong format of filmId path parameter Copy",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter Copy",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of draftId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/a",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"a"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/cooperative/1,2/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft does not exist.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft owner is not the authenticated user",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft owner is not the authenticated user\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft has already been closed",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft has already been closed\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not authenticated",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Review",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Review and draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 204\", function(){\r",
													"    pm.response.to.have.status(204);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    pm.response.to.not.be.withBody;\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check draft removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check agreement removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "getFilmReviews",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.totalPages).to.eql(1);\r",
													"    pm.expect(jsonData.currentPage).to.eql(1);\r",
													"    pm.expect(jsonData.totalItems).to.eql(2);\r",
													"    pm.expect(jsonData.reviews[0].filmId).to.eql(2);\r",
													"    pm.expect(jsonData.reviews[0].reviewersId).to.eql([2]);\r",
													"    pm.expect(jsonData.reviews[0].completed).to.eql(true);\r",
													"    pm.expect(jsonData.reviews[0].rating).to.eql(10);\r",
													"    pm.expect(jsonData.reviews[0].review).to.eql(\"I could not stop watching until the very end. However, you must watch the prequels before this film to really understand it.\");\r",
													"    pm.expect(jsonData.reviews[0].self).to.eql(\"/api/films/public/2/reviews/-2-\");\r",
													"    pm.expect(jsonData.reviews[0].self2).to.eql(\"/api/films/public/2/reviews/single/-2-\");\r",
													"    pm.expect(jsonData.reviews[0].reviewDate).to.eql(\"2022-04-04\");\r",
													"    pm.expect(jsonData.reviews[1].filmId).to.eql(2);\r",
													"    pm.expect(jsonData.reviews[1].reviewersId).to.eql([5]);\r",
													"    pm.expect(jsonData.reviews[1].completed).to.eql(true);\r",
													"    pm.expect(jsonData.reviews[1].rating).to.eql(10);\r",
													"    pm.expect(jsonData.reviews[1].reviewDate).to.eql(\"2022-03-04\");\r",
													"    pm.expect(jsonData.reviews[1].review).to.eql(\"This film is a perfect conclusion for the trilogy.\");\r",
													"    pm.expect(jsonData.reviews[1].self).to.eql(\"/api/films/public/2/reviews/-5-\");\r",
													"    pm.expect(jsonData.reviews[1].self2).to.eql(\"/api/films/public/2/reviews/single/-5-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/2/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"2",
												"reviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId query parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewerId query parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews?reviewerId=aaa",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews"
											],
											"query": [
												{
													"key": "reviewerId",
													"value": "aaa"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of query parameters",
							"item": [
								{
									"name": "Request 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of query parameters\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews?reviewerId=1&miaomiao=2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews"
											],
											"query": [
												{
													"key": "reviewerId",
													"value": "1"
												},
												{
													"key": "miaomiao",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of query parameters\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews?miaomiao=2&baubau=3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews"
											],
											"query": [
												{
													"key": "miaomiao",
													"value": "2"
												},
												{
													"key": "baubau",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of query parameters\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews?miaomiao=2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews"
											],
											"query": [
												{
													"key": "miaomiao",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Review not found",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There is no review\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The user with id reviewerID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The user with id reviewerID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews?reviewerId=400",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews"
											],
											"query": [
												{
													"key": "reviewerId",
													"value": "400"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getCooperativeFilmReviews",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.totalPages).to.eql(1);\r",
													"    pm.expect(jsonData.currentPage).to.eql(1);\r",
													"    pm.expect(jsonData.totalItems).to.eql(1);\r",
													"    pm.expect(jsonData.reviews[0].filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviews[0].reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.reviews[0].completed).to.eql(false);\r",
													"    pm.expect(jsonData.reviews[0].self).to.eql(\"/api/films/public/9/reviews/-1-2-\");\r",
													"    pm.expect(jsonData.reviews[0].self2).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId query parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId query parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative?reviewersId=1,2a",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative"
											],
											"query": [
												{
													"key": "reviewersId",
													"value": "1,2a"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of query parameters",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of query parameters\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative?reviewersId=1,2&ciao=1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative"
											],
											"query": [
												{
													"key": "reviewersId",
													"value": "1,2"
												},
												{
													"key": "ciao",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"cooperative"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Review not found",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There is no review\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"cooperative"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getSingleReview",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(2);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([5]);\r",
													"    pm.expect(jsonData.completed).to.eql(true);\r",
													"    pm.expect(jsonData.rating).to.eql(10);\r",
													"    pm.expect(jsonData.reviewDate).to.eql(\"2022-03-04\");\r",
													"    pm.expect(jsonData.review).to.eql(\"This film is a perfect conclusion for the trilogy.\");\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/2/reviews/-5-\");\r",
													"    pm.expect(jsonData.self2).to.eql(\"/api/films/public/2/reviews/single/-5-\");\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/2/reviews/single/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"2",
												"reviews",
												"single",
												"5"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/single/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"single",
												"5"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewerId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewerId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/single/5,aaa",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"single",
												"5,aaa"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/4/reviews/single/100",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"4",
												"reviews",
												"single",
												"100"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Review not found",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/single/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"single",
												"5"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getReview",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(2);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([5]);\r",
													"    pm.expect(jsonData.completed).to.eql(true);\r",
													"    pm.expect(jsonData.rating).to.eql(10);\r",
													"    pm.expect(jsonData.reviewDate).to.eql(\"2022-03-04\");\r",
													"    pm.expect(jsonData.review).to.eql(\"This film is a perfect conclusion for the trilogy.\");\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/2/reviews/-5-\");\r",
													"    pm.expect(jsonData.self2).to.eql(\"/api/films/public/2/reviews/single/-5-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/2/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"2",
												"reviews",
												"5"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"5"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewerId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/5,aaa",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"5,aaa"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"One of the reviewers does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/4/reviews/100",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"4",
												"reviews",
												"100"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Review not found",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"5"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getCooperativeReview",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.completed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/9/reviews/-1-2-\");\r",
													"     pm.expect(jsonData.self2).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewerId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/cooperative/5,aaa",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"cooperative",
												"5,aaa"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/cooperative/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"cooperative",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/cooperative/1,2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"cooperative",
												"1,2"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/4/reviews/cooperative/100,102",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"4",
												"reviews",
												"cooperative",
												"100,102"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Review not found",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/cooperative/1,2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"cooperative",
												"1,2"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "issueFilmReview",
					"item": [
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of the query parameter 'type'",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of the query parameter 'type'\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=miao",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "miao"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "missing reviewersId in the body",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"missing reviewersId in the body\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "reviewersId is not an array",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"reviewersId is not an array\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : \"ciao\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Cooperative review with less than two users",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Cooperative review with less than two users\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Too many properties in the body",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Too many properties in the body\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2],\r\n    \"ciaoo\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of query parameters",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of query parameters\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative&miao=gatto",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												},
												{
													"key": "miao",
													"value": "gatto"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of query parameters\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?miao=gatto",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "miao",
													"value": "gatto"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The user is not the owner of the film",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The user is not the owner of the film\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film is a private one",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film is a private one\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Succesful creation of a review",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData[0].filmId).to.eql(9);\r",
													"    pm.expect(jsonData[0].reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData[0].completed).to.eql(false);\r",
													"    pm.expect(jsonData[0].self).to.eql(\"/api/films/public/9/reviews/-1-2-3-\");\r",
													"    pm.expect(jsonData[0].self2).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check if the review has been created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.completed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/9/reviews/-1-2-3-\");\r",
													"    pm.expect(jsonData.self2).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Succesful creation of a multiple single review",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData[0].filmId).to.eql(3);\r",
													"    pm.expect(jsonData[0].reviewersId).to.eql([4]);\r",
													"    pm.expect(jsonData[0].completed).to.eql(false);\r",
													"    pm.expect(jsonData[0].self).to.eql(\"/api/films/public/3/reviews/-4-\");\r",
													"    pm.expect(jsonData[1].filmId).to.eql(3);\r",
													"    pm.expect(jsonData[1].reviewersId).to.eql([5]);\r",
													"    pm.expect(jsonData[1].completed).to.eql(false);\r",
													"    pm.expect(jsonData[1].self).to.eql(\"/api/films/public/3/reviews/-5-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [4,5]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews?type=single",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "single"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check if the review has been created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(3);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([4]);\r",
													"    pm.expect(jsonData.completed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/3/reviews/-4-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews/4",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check if the review has been created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(3);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([5]);\r",
													"    pm.expect(jsonData.completed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/3/reviews/-5-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews/4",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews",
												"4"
											]
										}
									},
									"response": [
										{
											"name": "Review Removal",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"films",
														"public",
														"9",
														"reviews",
														"1,2,3"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews",
												"5"
											]
										}
									},
									"response": [
										{
											"name": "Review Removal",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"films",
														"public",
														"9",
														"reviews",
														"1,2,3"
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not Authenticated",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "updateSingleReview",
					"item": [
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewerId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewerId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/single/a",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"single",
												"a"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewerId is not equal the id of the requesting user.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewerId is not equal the id of the requesting user.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/4/reviews/single/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"4",
												"reviews",
												"single",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review is already completed.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/3/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"3",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review is already completed.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/2/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"2",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Succesful creation of a review",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Film Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\" : \"Jujutsu Kaisen 0\",\r\n    \"private\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films"
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews?type=single",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "single"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 204\", function(){\r",
													"    pm.response.to.have.status(204);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    pm.response.to.not.be.withBody;\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check if the review has been updated",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1]);\r",
													"    pm.expect(jsonData.completed).to.eql(true);\r",
													"    pm.expect(jsonData.review).to.eql(\"stupendo\");\r",
													"    pm.expect(jsonData.reviewDate).to.eql(\"2022-09-10\");\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/-1-\");\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Film Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong Json Schema In the body of the request",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"JsonSchemaValidationError\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/single/4",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"single",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not Authenticated",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n    \"rating\": 10,\r\n    \"review\": \"stupendo\",\r\n    \"reviewDate\": \"2022-09-10\",\r\n    \"completed\": true\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/single/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"single",
												"1"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "deleteReview",
					"item": [
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews/aa,2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews",
												"aa,2"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "One of the reviewers does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"One of the reviewers does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/4/reviews/400",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"4",
												"reviews",
												"400"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The user is not the owner of the film",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The user is not the owner of the film\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/2/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"2",
												"reviews",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review has been already completed, so the invitation cannot be deleted anymore.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review has been already completed, so the invitation cannot be deleted anymore.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/5",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Too many properties in the body",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Too many properties in the body\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2],\r\n    \"ciaoo\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Succesful removal of a review",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Draft Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"review\" : \"Mi è piaciuto\",\r\n    \"rating\": 8\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 204\", function(){\r",
													"    pm.response.to.have.status(204);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    pm.response.to.not.be.withBody;\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Agreement Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check draft removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Review Removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not Authenticated",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\" : [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/1/reviews",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"1",
												"reviews"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Agreements",
			"item": [
				{
					"name": "addAgreement",
					"item": [
						{
							"name": "Wrong format of filmId path parameter Copy",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of draftId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of draftId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/a/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"a",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The author of the agreement is not a reviewer",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The author of the agreement is not a reviewer\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/2,3/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"2,3",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/cooperative/1,2/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,3/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,3",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft does not exist.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/5/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"5",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft has alrady been closed",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft has alrady been closed\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "You have already expressed an agreement for the draft",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"You have already expressed an agreement for the draft\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/3/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Json Validation Schema Error",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"JsonSchemaValidationError\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,6/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,6",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Request 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"JsonSchemaValidationError\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"ciao\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,6/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,6",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success",
							"item": [
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(7);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/7/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check agreement creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(7);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/7/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success  (Closing the draft and the review)",
							"item": [
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Film Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\" : \"Jujutsu Kaisen 0\",\r\n    \"private\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Review",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.draft.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.draft.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.draft.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.rating).to.eql(4);\r",
													"    pm.expect(jsonData.draft.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.draft.closed).to.eql(false);\r",
													"    pm.expect(jsonData.draft.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 2",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"frank.stein@polito.it\",\r\n    \"password\": \"shelley97\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(2);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/2\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 2",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 3",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"karen.makise@polito.it\",\r\n    \"password\": \"fg204v213\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(3);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/3\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 3",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":3\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check review complete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.rating).to.eql(4);\r",
													"    pm.expect(jsonData.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.completed).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/-1-2-3-\");\r",
													"    pm.expect(jsonData.self2).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check draft complete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.rating).to.eql(4);\r",
													"    pm.expect(jsonData.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.closed).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check agreement creation Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(3);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/3\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": [
										{
											"name": "LOGIN User 1",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/users/authenticator?type=login",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"users",
														"authenticator"
													],
													"query": [
														{
															"key": "type",
															"value": "login"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete All",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success  (Closing the draft without closing the review)",
							"item": [
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Film Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\" : \"Jujutsu Kaisen 0\",\r\n    \"private\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Review",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.draft.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.draft.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.draft.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.rating).to.eql(4);\r",
													"    pm.expect(jsonData.draft.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.draft.closed).to.eql(false);\r",
													"    pm.expect(jsonData.draft.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 2",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"frank.stein@polito.it\",\r\n    \"password\": \"shelley97\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(2);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/2\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 2",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 3",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"karen.makise@polito.it\",\r\n    \"password\": \"fg204v213\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(3);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(false);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/3\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": false,\r\n    \"reason\" : \"I don't feel like this\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 3",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":3\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check review incomplete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"\r",
													"    pm.expect(jsonData.completed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/-1-2-3-\");\r",
													"    pm.expect(jsonData.self2).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check draft complete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.rating).to.eql(4);\r",
													"    pm.expect(jsonData.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.closed).to.eql(true);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check agreement creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(3);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/3\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": [
										{
											"name": "LOGIN User 1",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/users/authenticator?type=login",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"users",
														"authenticator"
													],
													"query": [
														{
															"key": "type",
															"value": "login"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete All",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success  (Draft  still open)",
							"item": [
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Film Creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\" : \"Jujutsu Kaisen 0\",\r\n    \"private\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Review",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reviewersId\": [1,2,3]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews?type=cooperative",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews"
											],
											"query": [
												{
													"key": "type",
													"value": "cooperative"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Draft",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.draft.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.draft.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.draft.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.draft.rating).to.eql(4);\r",
													"    pm.expect(jsonData.draft.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.draft.closed).to.eql(false);\r",
													"    pm.expect(jsonData.draft.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"rating\" :4,\r\n    \"review\": \"Soooo boring...\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 3",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"karen.makise@polito.it\",\r\n    \"password\": \"fg204v213\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.agreement.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.agreement.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.agreement.authorId).to.eql(3);\r",
													"    pm.expect(jsonData.agreement.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement.agreement).to.eql(false);\r",
													"    pm.expect(jsonData.agreement.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/3\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 3",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":3\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check review incomplete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"\r",
													"    pm.expect(jsonData.completed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/-1-2-3-\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/1,2,3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"1,2,3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check draft incomplete",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.rating).to.eql(4);\r",
													"    pm.expect(jsonData.review).to.eql(\"Soooo boring...\");\r",
													"    pm.expect(jsonData.closed).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check agreement creation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(11);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2,3]);\r",
													"    pm.expect(jsonData.authorId).to.eql(3);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement).to.eql(false);\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/11/reviews/cooperative/-1-2-3-/drafts/1/agreements/3\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11/reviews/cooperative/1,2,3/drafts/1/agreements/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGIN User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": [
										{
											"name": "LOGIN User 1",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3001/api/users/authenticator?type=login",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3001",
													"path": [
														"api",
														"users",
														"authenticator"
													],
													"query": [
														{
															"key": "type",
															"value": "login"
														}
													]
												}
											},
											"_postman_previewlanguage": null,
											"header": null,
											"cookie": [],
											"body": null
										}
									]
								},
								{
									"name": "Delete All",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/11",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"11"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT User 1",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not authenticated",
							"item": [
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getAgreements",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.totalPages).to.eql(1);\r",
													"    pm.expect(jsonData.currentPage).to.eql(1);\r",
													"    pm.expect(jsonData.totalItems).to.eql(2);\r",
													"    pm.expect(jsonData.agreements[0].filmId).to.eql(9);\r",
													"    pm.expect(jsonData.agreements[0].reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.agreements[0].authorId).to.eql(1);\r",
													"    pm.expect(jsonData.agreements[0].draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreements[0].agreement).to.eql(true);\r",
													"    pm.expect(jsonData.agreements[0].self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-/drafts/1/agreements/1\");\r",
													"        pm.expect(jsonData.agreements[1].filmId).to.eql(9);\r",
													"    pm.expect(jsonData.agreements[1].reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.agreements[1].authorId).to.eql(2);\r",
													"    pm.expect(jsonData.agreements[1].draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreements[1].agreement).to.eql(false);\r",
													"    pm.expect(jsonData.agreements[1].self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-/drafts/1/agreements/2\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of draftId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of draftId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/a/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"a",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/90/reviews/cooperative/1,2/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"90",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,5/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,5",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/5/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"5",
												"agreements"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "getAgreement",
					"item": [
						{
							"name": "Succesful Request",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.filmId).to.eql(9);\r",
													"    pm.expect(jsonData.reviewersId).to.eql([1,2]);\r",
													"    pm.expect(jsonData.authorId).to.eql(1);\r",
													"    pm.expect(jsonData.draftId).to.eql(1);\r",
													"    pm.expect(jsonData.agreement).to.eql(true);\r",
													"\r",
													"    pm.expect(jsonData.self).to.eql(\"/api/films/public/9/reviews/cooperative/-1-2-/drafts/1/agreements/1\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of filmId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of draftId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of draftId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/a/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"a",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of authorId path parameter",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of authorId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements/a",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"a"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The author of the agreement is not a reviewer",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The author of the agreement is not a reviewer\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"3"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/90/reviews/cooperative/1,2/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"90",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,5/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,5",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There is no draft",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/5/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"5",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The author of the agreement does not exist",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The agreement does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "deleteAgreement",
					"item": [
						{
							"name": "Wrong format of filmId path parameter Copy",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of filmId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/a/reviews/cooperative/1,2/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"a",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of reviewersId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of reviewersId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2,a/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2,a",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of draftid",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of draftId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/a/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"a",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Wrong format of authorId path parameter",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"Wrong format of authorId path parameter\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements/a",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"a"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The author of the agreement is not a reviewer",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The author of the agreement is not a reviewer\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements/6",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"6"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "There should be at least two reviewers",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"There should be at least two reviewers\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The film with ID filmID does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The film with ID filmID does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/400/reviews/cooperative/1,2/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"400",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The reviewer does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The reviewer does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,20/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,20",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The review does not exist",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The review does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft does not exist.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft does not exist\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/5/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"5",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft owner is not the authenticated user",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 403\", function(){\r",
													"    pm.response.to.have.status(403);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft owner is not the authenticated user\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/3",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The agreement does not exist.",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The agreement does not exist.\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "The draft has already been closed",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 409\", function(){\r",
													"    pm.response.to.have.status(409);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].param).to.eql(\"Server\");\r",
													"    pm.expect(jsonData.errors[0].msg).to.eql(\"The draft has already been closed\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not authenticated",
							"item": [
								{
									"name": "Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    const jsonData= pm.response.json();\r",
													"    pm.expect(jsonData.error).to.eql(\"Not authorized\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/9/reviews/cooperative/1,2/drafts/3/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"9",
												"reviews",
												"cooperative",
												"1,2",
												"drafts",
												"3",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Success",
							"item": [
								{
									"name": "LOGIN",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"user.dsp@polito.it\",\r\n    \"password\": \"password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=login",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "login"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"agreement\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete agreement",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 204\", function(){\r",
													"    pm.response.to.have.status(204);\r",
													"})\r",
													"\r",
													"pm.test(\"Response body is what expected\", function(){\r",
													"    pm.response.to.not.be.withBody;\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check agreement removal",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:3001/api/films/public/7/reviews/cooperative/1,2,3/drafts/1/agreements/1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"films",
												"public",
												"7",
												"reviews",
												"cooperative",
												"1,2,3",
												"drafts",
												"1",
												"agreements",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "LOGOUT",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3001/api/users/authenticator?type=logout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3001",
											"path": [
												"api",
												"users",
												"authenticator"
											],
											"query": [
												{
													"key": "type",
													"value": "logout"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}